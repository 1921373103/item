server:
  # 端口
  port: 8080

# 端口
spring:
  application:
    name: item
  datasource:
    username: root
    password: Wanglin1.
    url: jdbc:mysql://abc.starlin.cc:13306/item?useUnicode=true&characterEncoding=UTF-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=GMT%2B8&useSSL=false
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
    initial-size: 10
    # 最大连接池连接数量，最大活跃连接数
    max-active: 150
    # 最小连接池连接数量，最小空闲数量
    min-idle: 10
    # 配置获取连接等待超时的时间
    max-wait: 5000
    # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
    pool-prepared-statements: false
    # 指定每个连接上PSCache的大小
    # max-pool-prepared-statement-per-connection-size: 20
    # 和上面的等价
    # max-open-prepared-statements:
    # 指定检测连接sql，如果是null，会影响testWhileIdle、testOnBorrow、testOnReturn失效，如果底层代码use-ping-method是true，默认使用ping
    validation-query: SELECT 1
    validation-query-timeout: 500
    # 申请连接时会使用validationQuery检测连接是否有效，true会降低性能，如果是true，并且检测到连接已关闭，会获取其它的可用的连接
    test-on-borrow: false
    # 归还连接时会使用validationQuery检测连接是否有效，true会降低性能，如果是true，并且检测到连接已关闭，会获取其它的可用的连接，放回数据库线程池
    test-on-return: false
    # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果此连接空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
    test-while-idle: true
    # 1)配合testWhileIdle=true时使用，如果当前jdbc使用间隔大于timeBetweenEvictionRunsMillis配置的空闲连接过期时间，执行validationQuery检测连接是否有效。
    # 数据库会主动超时并断开连接，因此建议timeBetweenEvictionRunsMillis小于数据库的连接主动断开时间（如mysql的wait_timeout和interactive_timeout）
    # 2)配置间隔多久才进行一次检测，Destroy线程检测需要关闭的空闲连接的时间，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 30000
    # max-evictable-idle-time-millis:
    # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有： 监控统计用的filter:stat日志用的filter:log4j防御sql注入的filter:wall
    # 配置多个英文逗号分隔
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；记录慢SQL
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

  # redis配置
  redis:
    # Redis数据库索引（默认为0）
    database: 0
    # Redis服务器地址
    host: abc.starlin.cc
    # Redis服务器连接端口
    port: 16379
    # Redis服务器连接密码（默认为空）
    # password:
    # 连接超时时间（毫秒）
    timeout: 1000ms
    lettuce:
      pool:
        # 连接池最大连接数
        max-active: 200
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1ms
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 0
  # 文件上传
  servlet:
    multipart:
      # 单个文件大小
      max-file-size:  10MB
      # 设置总上传的文件大小
      max-request-size:  20MB

timeout: 21600

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: ${timeout}
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: simple-uuid
  # 是否输出操作日志
  is-log: false

# mybatis-plus配置
mybatis-plus:
  global-config:
    db-config:
      # 全局逻辑删除的实体字段名
      logic-delete-field: isDel
      # 逻辑已删除值(默认为 1)
      logic-delete-value: 1
      # 逻辑未删除值(默认为 0)
      logic-not-delete-value: 0
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  mapper-locations: classpath*:mapper/*.xml

# 线程池配置
thread:
  pool:
    # 核心线程数
    core-size: 32
    # 最大线程数
    max-size: 64
    # 存活时间
    keep-alive-time: 10
    # 最大队列数
    max-queue-size: 1000


# Fds配置
fdfs:
  connect-timeout: 10000
  so-timeout: 3000
  tracker-list:
    - abc.starlin.cc:22122
  host: http://abc.starlin.cc:8874/
  group: group1

# 微信支付
wechat:
  appId: wxa08311d097dc10c3
  mchId: 1641478481
  wxOrder: https://api.mch.weixin.qq.com/v3/pay/transactions/jsapi
  notifyUrl: null
  key: FD30811350D3DB7E36AA3942E9D7E250
  wxSign: SIGN=WXPay
  mchSerialNo: 42236C4F027E8287310783203001940A911E4183
